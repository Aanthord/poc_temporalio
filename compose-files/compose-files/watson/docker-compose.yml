version: "3.8"
services:
  watson:
    container_name: watson
    build: .
    ports:
      - "7001:7001"
    volumes:
      - ./app:/app/app
      - ./hardhat.config.ts:/app/hardhat.config.ts
      - ./scripts:/app/scripts
      - ./contracts:/app/contracts
      - ./typechain-types:/app/typechain-types
      - ./tsconfig.json:/app/tsconfig.json
      - ./jest.config.json:/app/jest.config.json
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
    env_file:
      - .env
    environment:
      - CONN_STRING=mongodb://localAdmin:admin@mongo:27017/watson
      - TEST_CONN_STRING=mongodb://localAdmin:admin@mongo:27017/test
    command: sh -c "yarn install && NODE_ENV=local yarn run server"
    restart: unless-stopped
    links:
      - mongo
      - blockchain
    depends_on:
      - blockchain

  blockchain:
    container_name: blockchain
    build: .
    ports:
      - "8545:8545"
    volumes:
      - ./app:/app/app
      - ./hardhat.config.ts:/app/hardhat.config.ts
      - ./scripts:/app/scripts
      - ./cache:/app/cache
      - ./contracts:/app/contracts
      - ./app/solidity:/app/artifacts
      - ./typechain-types:/app/typechain-types
      - ./tsconfig.json:/app/tsconfig.json
      - ./jest.config.json:/app/jest.config.json
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
    env_file:
      - .env
    environment:
      - CONN_STRING=mongodb://localAdmin:admin@mongo:27017/watson
      - TEST_CONN_STRING=mongodb://localAdmin:admin@mongo:27017/test
    command: npx hardhat node
    restart: unless-stopped
    links:
      - mongo
  #   networks:
  #     - network-node-bridge
  #     - mirror-node
  #     - cloud-storage
  #     - json-rpc-relay
  # database
  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
      - ./.github/workflows/create-user.sh:/docker-entrypoint-initdb.d/create-user.sh
  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"
